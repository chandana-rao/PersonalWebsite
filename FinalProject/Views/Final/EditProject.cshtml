@model FinalProject.Models.Project

@{
    ViewData["Title"] = "EditProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<hr />
<div class="row" style="padding-top: 1em;">
    <div class="col-md-4">
        <form asp-action="EditProject">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PId" />
            <div class="form-group">
                <label asp-for="name" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Name</label>
                <input asp-for="name" class="form-control" style="padding-left: 1em; width: 500px;" />
                <span asp-validation-for="name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="year" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Year</label>
                <input asp-for="year" class="form-control" style="padding-left: 1em; width: 500px;" />
                <span asp-validation-for="year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="projectType" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Project type</label>
                @Html.DropDownList("projectType", new SelectList(Enum.GetValues(typeof(FinalProject.Models.TypeProject))), "Select type", new { @class = "form-control" })
                <span asp-validation-for="projectType" class="text-danger"></span>
            </div>
            @if (Model.projectType == Models.TypeProject.Personal && (Model.degreeType == Models.TypeDegree.Graduate || Model.degreeType == Models.TypeDegree.UnderGraduate))
            {
                <p style="padding-right: 1em; width: 500px; display: block; padding-bottom: 1em; color: orangered">Personal projects don't have any degree type</p>
            }
            @if (Model.projectType == Models.TypeProject.Academic && (Model.degreeType == null))
            {
                <p style="padding-right: 1em; width: 500px; display: block; padding-bottom: 1em; color: orangered">Academic projects need degree type</p>
            }
            <div class="form-group">
                <label asp-for="degreeType" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Degree type</label>
                @Html.DropDownList("degreeType", new SelectList(Enum.GetValues(typeof(FinalProject.Models.TypeDegree))), "Select type", new { @class = "form-control" })
                <span asp-validation-for="degreeType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="description" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Description</label>
                <input asp-for="description" class="form-control" style="padding-left: 1em; width: 500px;" />
                <span asp-validation-for="description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="technologies" class="control-label" style="padding-right: 1em; width: 80px; display: inline-block; padding-bottom: 1em;">Technologies</label>
                <input asp-for="technologies" class="form-control" style="padding-left: 1em; width: 500px;" />
                <span asp-validation-for="technologies" class="text-danger"></span>
            </div>
            <div class="form-group" style="padding-top: 2em;">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div style="padding-top: 1em;">
    <a asp-action="project">Back to List</a>
</div>

